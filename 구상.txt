[커밋 내용]
git commit -m "deployed"

배포는 완료했지만
서버와 크로미움 2개를 한꺼번에 돌리니 cpu가 부족
3페이지 돌리니 아예 멈춰버림, 1코어 1페이지가 훨씬 빠름
3~4과목만 신청하더라도 약 20초
따라서 다른 요청도 매우 오래 걸리게 됨.
수강 신청 기간에만 개인 컴퓨터로 서버를 돌리든가 puppeteer를 사용해서 최적화하든가 해야 할 듯.
앞으로 노드 사용하게 되면 pm2부터 공부 (이거 키면 인스턴스 접속이 안되다가 재부팅하고 한참 뒤에 됨)



[나중에 해야할거]

[보류]
-크롤링해서 과목 미리 등록해놓기
-처음부터 필요한 프로세스만 실행할 수 있도록 - 프로세스 객체 생성과 프로세스 생성을 묶어놔서 일단 보류
-자식 프로세스에게 원본 리스트를 넘겨도(포인터) 프로세스끼리는 데이터가 공유가 안됨 - 리스트를 자식이 새로 가지게됨 (cpu, 메모리 더 씀) 따라서 매니저 객체를 만들려고 했는데 액세스 속도가 느려진다는 단점. 둘 다 구현해보는게 맞는듯
있으면 과목 정보 새로고침 버튼 넣기 - (+스로틀링) - 알림 받고 자동 새로고침하는게 더 나을듯
-과목의 변동된 자/타과 중에 신청자가 없는걸 찾을 경우 서버로 넘기지 않기
-과목을 fetch할 때마다 최대 과목 수를 보내야하나? 일단 하드코딩해둠
-db에 문서가 있는지 확인하고 가져오는건 2번 작업하는거니까 가져오고 데이터가 있으면 작업하는 방식으로 바꿔야할듯
-db에 접근할 때 없으면 브라우저에게 오류 전달하기 - 이거 무슨 기능을 구현하고싶었던건지 기억이 안남
-csrf로 일단 구현해놓고 double csrf로 교체 - 공부를 더 하고 도전해야...
-서버에 명령어 입력해서 자식 다 중지시키고 종료할 수 있도록 만들기 - 
-퍼블릭 자원들 로딩 될 때까지 페이지 띄우지 않기?
-메세지만 따로 모아서 관리?
-크롤러와 페이지 끊겼을 때 대처
-서버 - 로그파일 만들기
웹뷰 스크롤 안되게 못했음 - ios는 잘되는데 안드로이드는 적용이 안된다고들 하는듯

[중단]
과목이름 적당히만 입력해도 찾을 수 있게끔? - 이거 전대 수업조회에서 안돼서 못할듯
요청 처리하는 기준이 id인데 uuid 추가해야 하나? 애초에 로딩이 엄청 오래 걸릴 일이 없을거 같긴한데 - 필요 없음
동적으로 페이지 수 줄일 수 있게 - 프로세스 줄이는걸로도 충분하다고 봄
과목 찾고 저장하는 걸 파이썬에서 진행하도록? - 찾기만 파이썬에서 하고 서버가 저장함 - 서버가 저장할 과목의 좀 더 자세한 데이터를 가지고 있으니까
신청 과목 초기화 버튼 - 설정에 계정 초기화 넣을거
신청한 과목 없으면 없다고 띄우기 - 신청한 과목 수 띄웠으므로 중복됨

[완료]
-과목 이름 유효성 검증
-파이썬과 연결하는법 배우기
-파이썬 입출력 인코딩 형식 잘못된거 같은데 고치기
-과목 찾는 파이썬 구현 //아이디를 전달하고, 파이썬은 받아서 다시 보내서, 아이디를 이용해서 사용자에게 전달? - 동기일 수가 없음 - 따라서 그렇게 해야할듯? - db에 따로 저장하기에도 관리가 귀찮아지니까 저대로하면 로컬에서 데이터가 분실돼도 처리가 까다롭지 않음 - 크롤링 요청을 프로미스로 구현해서 아이디를 전달하지 않아도 되게 함
크롤러 여러 페이지로 나누기
-과목 추가 - 플래싱 구현 -> 말고 ajax로 구현
-존재하지 않는 강의 이름을 조회했을 때 오류가 뜨는거 해결
-course-controllers.py 오류처리(찾은 과목 없어도 이전 과목 개수가 그대로 유지되는 현상때문에 과목 수가 없는 걸 인지하지 못했던 걸 해결)
-서브젝 컨트롤러 - 유저 과목 보고 서브젝에서 과목 가져오기 -> 먼저 subject 모델 추가 - 과목에 신청자만 넣고 과목에서 유저의 신청 과목을 찾을 수 있게 해놓음 - 시간은 좀 더 걸림
-서버 시작되고 과목 추가 버튼을 2번 눌러야 그 이후부터 정상 작동하는거 수정하기 - 처음에 과목 조회하고나서 바로 과목 개수를 확인해서 0개라 제대로 작동을 안한건가? - 애초에 0개면 작동을 안하게 만들어놨어서 아닌거 같은데 - 일단 해결됨 찾은 과목 없어도 이전 과목 개수가 그대로 유지되는 현상 고쳤는데 같이 해결됨
-코스 페이지에 들어가면 과목들 뜨게 하기
-코스 페이지에서 과목 삭제할 수 있게하기 - unset, pull
-신청한거 자과인지 타과인지 나오게 하기 - 신청한 과목 db에서 가져오고 가공 후 보내고 프론트에서 알아볼 수 있게 변환
-과목코드 대소문자 구분 없게 하기
-테이블이 없는데도 참조해서 존재하지 않는다고 나오는 오류 해결 - waitForNavigation 사용해서 된거 같은데?
-빠르게 과목 추가 여러 번하면 여러 개 추가되는 현상 - 등록하기 전에도 등록이 됐는지 확인해야 할듯 - 확인했는데도 비동기라 너무 빨리 등록돼서 불가능한듯, 유니크 인덱스 추가해서 해결
-course 쓰로틀링 구현
-일정 개수 이하일 때 과목 범위 제대로 안나눠지는거 수정
-파이프로 데이터 전달하는거 에러 처리
-서버에서 과목 컬렉션에서 applicants가 빈배열이 아닌 과목을 찾음, 과목의 이름과 코드, 학년을 넘김 - 그럴 필요 없이 파이썬에서 접속하면 됨
-과목이 별로 없으면 프로세스 생성하지 않거나 삭제하게 - 필요한 프로세스가 아닐 때 카운트 올리고, 일정 값이 됐을 때 프로세스 제거
프로세스 안켜져있으면 courses_ranges 변경 - 만들고 변경하지않고, 미리 살아있는 프로세스 수 확인하고 이걸 기준으로 범위 결정
자식과 부모가 따로 가질 모듈은 따로 임포트하기
윈도우 환경에서 만들던거 맥에서 구동되게 수정
os 확인하는 부분 리팩토링
while, for문으로 페이지 순회하면서 과목 찾기 - 과목 수가 많아도 괜찮음 - 다 찾으면?
다 찾으면 부모에게 찾은 과목 넘기기 -> 그럴 필요 없이 stdout으로 서버에게 바로 넘기기
서버와 seat-checker-mp.py 연결
넘길 과목 수를 동적으로 변경해야할 듯 - 너무 복잡해질듯 한 루틴이 시작될 때 살아있는 프로세르를 기준으로 과목 수를 나누고, 필요한 프로세스를 실행시켜놓는 방식으로 구현
실행되고 계속 과목을 찾도록 사이클 구현
자식이 일정 시간 이상 결과를 반환하지않으면 프로세스를 종료하도록 하기
seat-checker-mp.py에게 여석이 있는 강의를 받는 비동기 함수 구현
엑스포에 연결(로컬)
프론트 - 어느정도 꾸미기
프론트 course.js 리팩토링
로딩 구현하기
로그인 페이지의 히든 인풋에 푸시 토큰 집어넣는 js코드 주입
로그인 할 때 히든 인풋까지 서버로 보내기 - 회원가입 때는 보내지 않음
로그인 시 아이디나 푸시 토큰이 같은 세션 있으면 삭제하고나서 토큰 넣은 세션 만들기
신청자 _id -> id로 바꾸기 (id 얻을 필요 없이 바로 세션에 접근하기 위해)
서버는 시트체커에게 받은 과목을 코스 컬렉션에서 찾고, 신청자의 타입을 검사
알림을 보내야 하면 신청자의 아이디를 이용해 세션이 있는지 확인, 세션이 있으면 세션에 저장된 신청자의 토큰을 이용하여 푸시 알림 전송
없어진 과목에 대해서도 서버에게 과목들 보내기 -> 여석이 변동된 자/타과에 대한 정보를 보내는 것으로 변경
시트체커 - 찾은 과목 없을 때 다음 로직 실행하지 않기
파이썬 스폰 클래스 리팩토링
어드민 페이지에 과목 삭제 버튼 추가하고 삭제시키고 db관련 작업 잘 작동하는지 보기 - 기능상 어드민 페이지까지는 필요 없음, mongosh로 진행 - 원활하게 작동하는듯
오류 페이지 조금만 꾸미기
권한 없어도 404 띄우기
확인 버튼 색깔 변경
알림을 모달로 바꾸기
세팅 페이지 만들기
계정 탈퇴
로그아웃 + 그 유저의 세션 삭제
계정 초기화 - 트랜잭션 구현이 안돼서 필요한 기능일듯
Front 리팩토링
신청 과목 개수 제한 나타내기
클릭 함수 모두 스로틀링 넣기
아이디 특수문자 금지 (영문자/숫자만 허용)
괄호까지 입력하면 검색 안됨, 괄호 부분은 없애서 검색
과목을 찾지 못했으면 서버로 보내지 않기
로그아웃하면 세션이 없어지는데도 푸시 알림 보내려고 세션 확인도 안하고 접근하는거 수정하기
로그인을 한 상태에서 세션 삭제하고 fetch하면 세션이 없으므로 네트워킹 에러 알림 뜸(다른 곳에서 로그인을 했을경우) - 로그인 페이지로 리다이렉션 - 로그인 시 세션을 다 삭제해버리면 이전 로그인 기기에서 csrf 토큰에 접근할 수 없음 - 결과적으로 403밖에 띄우지 못하니까 세션을 삭제하지 않고 인증 상태만 false로 바꾸도록 함
프로즌 모듈 문제 해결 - 프로즌 모듈 관련해서 건든거 없는데 다시 됨 이유는 모름 - 프로젝트 초기에 f5눌렀을 때 프로즌 모듈 오류떠서 프로즌 모듈 꺼놓으니 오류 안뜨다가 최근에 f5로 실행하니 다시 오류가 떴음. 이때 직접 실행 버튼 누르니 실행이 됐었는데, 해결하려고 f5로 실행하니 또 지금은 오류가 안뜸(ide 재시작했음). 추가로 노드에서 파이썬 프로세스를 실행시킬 땐 프로즌 모듈 오류 안뜸
파이썬 버전과 사용하는 라이브러리 버전 기재
몇초 있어도 결과 안오면 오류 떴다고 표시
자동 로그인
속성이 포함되지 않은 채 요청이 되면 오류를 잡지 못하는 것
-서버에서 같은 유저의 요청의 간격이 짧을 때 무시 - db 건드리는 요청이면 간격을 좀 길게?
500 미들웨어 fetch전용
-웹페이지 꺼졌는지 확인하고 종료하는 기능, 오류뜨면 자동으로 프로세스가 꺼지는지 확인하기 - 응답 안오면 프로세스 종료되게 해놓음
리눅스에서 worker함수의 인자가 0개인데 2개 받았다고 오류뜨는 거 수정

[몽고db]
[collection - auto-course-seat-alert]
-users {
    _id
    id
    password
    isAdmin
    push_notification_id: ''
}

-session {
	user{id, pushToken}
	isAuthenticated
}

-courses { //과목
    _id
    code: 'CLT0085-1' //분반까지
    name: '캡스톤'
    alertedSelf: boolean,
    alertedOther: boolean,
    applicants = { [
        {
         user: ObjectId(users->id),
         type: '1' //1타과, 0자과
         //push_notification_id: '',
         },
        {},
         ...]
    }
}

[인지사항]
-여러 계정을 여러 장치에서 만드는건 막지 못함 - 이정도까지 막을 필요는 없어보이지만 굳이 하자면 휴대폰 인증?
-윈도우는 파이썬 설치하면 python, 맥은 python3로 설치되는듯, python-spawn에서 이름 바꿔줘야 함
-배포 시 클라우드의 크롬 위치 확인해서 크롤링 파일에 패스 넣기 - 리눅스 기반 환경에선 크로미움을 사용하니 필요 없음
-['command', data] // 'close': 브라우저 종료, 'crawl' : 크롤링할 데이터 넘김, 'create' : 브라우저 생성
-파이썬은 GIL때문에 한 번에 하나의 스레드에서 바이트 코드가 실행돼서 CPU바운드 작업 시 멀티 스레딩하면 손해임, I/O바운드 작업은 대기 시간이 길어서 그 시간에 다른 스레드가 실행될 수 있으므로 멀티 스레딩이 괜찮은 선택. 크롤러는 I/O바운드인거 같고, I/O작업 중에도 비동기로 처리되지 않는 작업도 있기 때문에 멀티 스레딩을 구현하는게 맞나?
그냥 한 프로그램에서 여러 페이지 띄우고 비동기로 처리하는게 맞는듯 - 생각보다 cpu 계산 많이 잡아먹어서 멀티 프로세싱으로 결정
-한 휴대폰에 하나의 앱을 여러 개 깔 수 있는 방법이 있음 - 알림을 받을 토큰 개수를 세는 방법으로 제한 가능할듯 - 다른 계정으로 만들면 제한 불가능함, 일단 빌드하고 페러렐즈 깔아서 확인
-백그라운드에서 알림이나 권한? 허용하는 그런거 알아봐야 할 수도
-사용자가 토큰 값을 건드려 유효하지 않은 토큰값을 받을 수도 있음. - 유효하지 않은 토큰으로 알림을 보내더라도 오류는 발생하지 않음

-싱글 코어 (브라우저 1개로)
100페이지 - 20.74초		0.2
60페이지 - 평균 9초		0.15
50페이지 - 평균 7.5초	0.15
30페이지 - 평균 5.3초	0.17
20페이지 - 평균 3.8초	0.19
50과목만 신청해도 평균적으로 7.5초가 걸림
-멀티 프로세싱 (프로세스 당 브라우저 1개)
2코어 2페이지 (4) - 0.76	0.19
4 5 (20) - 2.48	0.124
5 5 (25) - 2.45	0.098
5 2 (10) - 0.903	0.09
6 5 (30) - 2.6	0.086
6 4 (24) - 2.13	0.08875
7 7 (49) - 4.7	0.095
7 4 (28) - 2.6	0.09
7 3 (21) - 1.7	0.080
7 2 (14) - 1.25	0.089
8 2 (16) - 1.35	0.084

레노버 멀티 프로세싱 -
55과목 - 7.8초

맥 멀티 프로세싱 -
7 3 (54) 5.1초
5 3 (54) 5.2초
3 3 (99) 12초
7 3 (99) 10초
5 3 (59) 5초 후반

5코어 3페이지 -
1과목 : 0.5초
2과목 : 1초
3과목 : 1.5초
4과목 : 1.4초
6 ~ 12 : 1.6
15: 1.7
25 : 2.4

3코어 3페이지 -
25과목 : 2.5~3.5 (max 4)





[페이지]
1. 회원가입
2. 로그인
3. 메인 - 내가 신청한 과목(+ 옆에 삭제 버튼), 모두 삭제, 과목 추가 버튼(과목 이름과 과목의 대상학년, 과목 코드, 자과/타과 입력)
5. 설정 - 알림 횟수, 비밀번호 변경(세션 삭제!)

[구현]
-신청 과목 추가(py)
1. 전남대 수업 목록 사이트에서 전달 받은 수업 정보로 수업을 검색
2. 수업 존재 ?
 (
 신청 개수 확인(신청 과목 배열 길이)
  내가 신청한 수업인지 확인
   내가 신청한 수업 리스트에 추가
   알림 보낼 수업 리스트에 없을 경우 수업 추가
   수업의 신청자 목록에 추가
   추가 완료 alert창) : 과목 없음 alert창;

-신청 과목 삭제
과목 코드를 찾고 applicant.user 중에 같은 거 찾아서 삭제

-초기화
applicant.user 중에 같은 거 찾아서 삭제, applicant 배열 길이 0일 경우 그 문서 삭제 - 모든 과목에 대해
user 신청 과목 전체 삭제

-푸시 토큰 관리
1. 로그인 시 그 유저의 다른 세션(들) 있으면 삭제하고 세션 만들기(토큰 넣기)
2. 로그아웃 시 그 유저의 세션 삭제
3. 푸시 알림을 보낼 때 세션이 있는지 확인하고 보내기
이렇게 구현함으로써 한 휴대폰에 여러 계정의 알림이 갈 수 없게 하며, 회원가입에 제한을 두지 않음(비밀번호 잊어버렸을 때 찾을 방법을 구현하지 않았으니까 그 상황을 대비)
에/시뮬레이터에서는 로컬 푸시만 가능하니 물리적 장치만 신경쓰면 됨

-알림(py)
1. subject_to_alert의 모든 document를 가져옴
2. 스레드에게 (과목 수 / 스레드 수) 만큼의 과목을 전달해줌
3. 스레드는 웹페이지에게 (자신이 맡은 과목 수 / 웹페이지 수)만큼의 과목을 전달해줌 - 인덱싱
4. 여석이 있는지 확인함
5-1. 여석 없을 경우 : 
alerted ? (과목 사라짐 푸시 알림, alerted: false) : return ;
5-2. 여석 있을 경우 : 
alerted ? (return) : (과목 생김 푸시 알림) ;
푸시 알람 id를 얻기 위해 users 문서를 참조하지 않게 하기 위해(비효율적) 신청자 문서에도 푸시 알람 id 넣기 - 대신 푸시 알림 id가 변경됐을 경우 최신화 잘해야 함
최대 신청 가능한 과목 수 구현
