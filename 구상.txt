[커밋 내용]

[당장 해야할 거]
여석 확인하는 python파일에 연결하고 기능 구현
서버에서 과목 컬렉션에서 applicants가 빈배열이 아닌 과목을 찾음, 과목의 이름과 코드, 학년을 넘김 - 그럴 필요 없이 파이썬에서 접속하면 됨
파이썬은 GIL때문에 한 번에 하나의 스레드에서 바이트 코드가 실행돼서 CPU바운드 작업 시 멀티 스레딩하면 손해임, I/O바운드 작업은 대기 시간이 길어서 그 시간에 다른 스레드가 실행될 수 있으므로 멀티 스레딩이 괜찮은 선택. 크롤러는 I/O바운드인거 같고, I/O작업 중에도 비동기로 처리되지 않는 작업도 있기 때문에 멀티 스레딩을 구현하는게 맞나?
그냥 한 프로그램에서 여러 페이지 띄우고 비동기로 처리하는게 맞는듯
생각보다 cpu 계산 많이 잡아먹어서 멀티 프로세싱으로 결정
파이썬에서 바로 db에 접속

싱글 코어 (브라우저 1개로)
100페이지 - 20.74초		0.2
60페이지 - 평균 9초		0.15
50페이지 - 평균 7.5초	0.15
30페이지 - 평균 5.3초	0.17
20페이지 - 평균 3.8초	0.19
50과목만 신청해도 평균적으로 7.5초가 걸림

멀티 프로세싱 (프로세스 당 브라우저 1개)
2코어 2페이지 (4) - 0.76	0.19
4 5 (20) - 2.48	0.124
5 5 (25) - 2.45	0.098
5 2 (10) - 0.903	0.09
6 5 (30) - 2.6	0.086
6 4 (24) - 2.13	0.08875
7 7 (49) - 4.7	0.095
7 4 (28) - 2.6	0.09
7 3 (21) - 1.7	0.080
7 2 (14) - 1.25	0.089
8 2 (16) - 1.35	0.084



조회 시간을 줄이기 위해 멀티 프로세싱 선택

db에 접근할 때 없으면 브라우저에게 오류 전달하기

[나중에 해야할거]
서버에서 같은 유저의 요청의 간격이 짧을 때 무시 - db 건드리는 요청이면 간격을 좀 길게?
auth - 새로고침되는 동안에는 버튼 클릭 못하게
아이디 특수문자 금지
신청 과목 개수 제한
신청 과목 초기화 버튼
프론트 course.js 리팩토링
Model - modify 메서드 수정
없는 과목 찾는거 불안정한듯 - 수정해야 할듯
크롤링해서 과목 미리 등록해놓기
몇초 있어도 결과 안오면 오류 떴다고 표시
어드민 페이지에 과목 삭제 버튼 추가하고 삭제시키고 db관련 작업 잘 작동하는지 보기
회원탈퇴나 비번 변경시 세션 삭제 후 signup 페이지
과목이름 적당히만 입력해도 찾을 수 있게끔?
메세지 관리 어떻게 할지 생각해보기
과목 찾기 계속 요청하는 js코드 쓰고, 시크릿 모드, 로그인 안한 모드까지 켜서 확인
크롤러와 페이지 끊겼을 때 대처
크롤러 여러 페이지로 나누기
요청 처리하는 기준이 id인데 uuid 추가해야 하나? 애초에 로딩이 엄청 오래 걸릴 일이 없을거 같긴한데

[collection - auto-course-seat-alert-session]
session

[collection - auto-course-seat-alert]
users {
    _id
    id
    password
    isAdmin
    push_notification_id: ''
}

courses { //과목
    _id
    name: '캡스톤'
    code: 'CLT0085-1' //분반까지
    alertedSelf: boolean,
    alertedOther: boolean,
    applicants = { [
        {
         user: ObjectId(users->id),
         type: '1' //1타과, 0자과
         //push_notification_id: '',
         },
        {},
         ...]
    }
}

[인지사항]
csrf로 일단 구현해놓고 double csrf로 교체
자동 로그인 좀이따 구현
배포 시 클라우드의 크롬 위치 확인해서 크롤링 파일에 패스 넣기

[페이지]
1. 회원가입
2. 로그인
3. 메인 - 내가 신청한 과목(+ 옆에 삭제 버튼), 모두 삭제, 과목 추가 버튼(과목 이름과 과목의 대상학년, 과목 코드, 자과/타과 입력)
5. 설정 - 알림 횟수, 비밀번호 변경(세션 삭제!)

[구현]
-신청 과목 추가(py)
1. 전남대 수업 목록 사이트에서 전달 받은 수업 정보로 수업을 검색
2. 수업 존재 ?
 (
 신청 개수 확인(신청 과목 배열 길이)
  내가 신청한 수업인지 확인
   내가 신청한 수업 리스트에 추가
   알림 보낼 수업 리스트에 없을 경우 수업 추가
   수업의 신청자 목록에 추가
   추가 완료 alert창) : 과목 없음 alert창;

-신청 과목 삭제
과목 코드를 찾고 applicant.user 중에 같은 거 찾아서 삭제

-초기화
applicant.user 중에 같은 거 찾아서 삭제, applicant 배열 길이 0일 경우 그 문서 삭제 - 모든 과목에 대해
user 신청 과목 전체 삭제


-알림(py)
1. subject_to_alert의 모든 document를 가져옴
2. 스레드에게 (과목 수 / 스레드 수) 만큼의 과목을 전달해줌
3. 스레드는 웹페이지에게 (자신이 맡은 과목 수 / 웹페이지 수)만큼의 과목을 전달해줌 - 인덱싱
4. 여석이 있는지 확인함
5-1. 여석 없을 경우 : 
alerted ? (과목 사라짐 푸시 알림, alerted: false) : return ;
5-2. 여석 있을 경우 : 
alerted ? (return) : (과목 생김 푸시 알림) ;
푸시 알람 id를 얻기 위해 users 문서를 참조하지 않게 하기 위해(비효율적) 신청자 문서에도 푸시 알람 id 넣기 - 대신 푸시 알림 id가 변경됐을 경우 최신화 잘해야 함


[해결]
과목 이름 유효성 검증
파이썬과 연결하는법 배우기
파이썬 입출력 인코딩 형식 잘못된거 같은데 고치기
과목 찾는 파이썬 구현 //아이디를 전달하고, 파이썬은 받아서 다시 보내서, 아이디를 이용해서 사용자에게 전달? - 동기일 수가 없음 - 따라서 그렇게 해야할듯? - db에 따로 저장하기에도 관리가 귀찮아지니까 저대로하면 로컬에서 데이터가 분실돼도 처리가 까다롭지 않음 - 크롤링 요청을 프로미스로 구현해서 아이디를 전달하지 않아도 되게 함
과목 추가 - 플래싱 구현 -> 말고 ajax로 구현
존재하지 않는 강의 이름을 조회했을 때 오류가 뜨는거 해결
course-controllers.py 오류처리(찾은 과목 없어도 이전 과목 개수가 그대로 유지되는 현상때문에 과목 수가 없는 걸 인지하지 못했던 걸 해결)
서브젝 컨트롤러 - 유저 과목 보고 서브젝에서 과목 가져오기 -> 먼저 subject 모델 추가 - 과목에 신청자만 넣고 과목에서 유저의 신청 과목을 찾을 수 있게 해놓음 - 시간은 좀 더 걸림
서버 시작되고 과목 추가 버튼을 2번 눌러야 그 이후부터 정상 작동하는거 수정하기 - 처음에 과목 조회하고나서 바로 과목 개수를 확인해서 0개라 제대로 작동을 안한건가? - 애초에 0개면 작동을 안하게 만들어놨어서 아닌거 같은데 - 일단 해결됨 찾은 과목 없어도 이전 과목 개수가 그대로 유지되는 현상 고쳤는데 같이 해결됨
코스 페이지에 들어가면 과목들 뜨게 하기
코스 페이지에서 과목 삭제할 수 있게하기 - unset, pull
신청한거 자과인지 타과인지 나오게 하기 - 신청한 과목 db에서 가져오고 가공 후 보내고 프론트에서 알아볼 수 있게 변환
과목코드 대소문자 구분 없게 하기
테이블이 없는데도 참조해서 존재하지 않는다고 나오는 오류 해결 - waitForNavigation 사용해서 된거 같은데?
빠르게 과목 추가 여러 번하면 여러 개 추가되는 현상 - 등록하기 전에도 등록이 됐는지 확인해야 할듯 - 확인했는데도 비동기라 너무 빨리 등록돼서 불가능한듯, 유니크 인덱스 추가해서 해결
course 쓰로틀링 구현